<?xml version="1.0" encoding="UTF-8"?>
<!--suppress ALL -->
<beans xmlns="http://www.springframework.org/schema/beans"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:context="http://www.springframework.org/schema/context"
      xmlns:p="http://www.springframework.org/schema/p"
      xmlns:batch="http://www.springframework.org/schema/batch"
      xmlns:jdbc="http://www.springframework.org/schema/jdbc"
      xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd

      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-3.1.xsd

      http://www.springframework.org/schema/batch
      http://www.springframework.org/schema/batch/spring-batch-2.0.xsd
      http://www.springframework.org/schema/jdbc
	  http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
                            ">


    <!--Spring annotation 설정-->
    <!--<context:annotation-config />-->
    <!--<context:property-placeholder location="classpath:applicationProperty.properties" />-->

    <!--component-scan  설정-->
    <!--<context:component-scan base-package="atm.*"/>-->

    <!--job : 배치 job 을 설정한다.-->
    <!--step : 배치 step 을 설정한다.-->
    <!--tasklet : step 내에서 사용되는 tasklet 을 설정한다.-->
    <!--chunk : step 내에서 사용되는 chunk 를 설정한다.-->
    <!--job-repository : 메타데이터를 위한 job repository 를 설정한다.-->

    <!--spring batch 설정-->
    <!--<bean id="jobRepository" class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">-->
        <!--<property name="dataSource" ref="dataSource" />-->
        <!--<property name="transactionManager" ref="transactionManager" />-->
        <!--<property name="databaseType" value="hsql" />-->
    <!--</bean>-->
    <!--<bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">-->
        <!--<property name="jobRepository" ref="jobRepository" />-->
    <!--</bean>-->
    <!--<bean id="transactionManager" class="org.springframework.batch.support.transaction.ResourcelessTransactionManager" />-->


    <!--mybatis설정-->
    <!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" lazy-init="true" destroy-method="close">-->
        <!--<property name="driverClassName" value="${atm.driverClassName}"/>-->
        <!--<property name="url" value="${atm.url}"/>-->
        <!--<property name="username" value="${atm.username}"/>-->
        <!--<property name="password" value="${atm.password}"/>-->
        <!--<property name="initialSize" value="${atm.initialSize}"/>-->
        <!--<property name="maxWait" value="${atm.maxWait}"/>-->
        <!--<property name="maxActive" value="${atm.maxActive}"/>-->
        <!--<property name="validationQuery" value="${atm.validationQuery}"/>-->
        <!--<property name="testOnBorrow" value="${atm.testOnBorrow}"/>-->
        <!--<property name="testOnReturn" value="${atm.testOnReturn}"/>-->
        <!--<property name="testWhileIdle" value="${atm.testWhileIdle}"/>-->
        <!--<property name="maxIdle" value="${atm.maxIdle}"/>-->
        <!--<property name="minIdle" value="${atm.minIdle}"/>-->
        <!--<property name="timeBetweenEvictionRunsMillis" value="${atm.timeBetweenEvictionRunsMillis}"/>-->
    <!--</bean>-->

    <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
        <!--<property name="dataSource" ref="datasource"/>-->
        <!--<property name="mapperLocations" value="classpath*:sqlmap/**/*.xml"/>-->
        <!--<property name="configLocation" value="classpath:/mybatis-config.xml"/>-->
    <!--</bean>-->
    <!--<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">-->
        <!--<constructor-arg index="0" ref="sqlSessionFactory"/>-->
    <!--</bean>-->


</beans>
